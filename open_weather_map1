#!/usr/bin/env python

import time
import collections
import requests
import json
import location

conditions = {200: "thunderstorm with light rain",
201: "thunderstorm with rain",
202: "thunderstorm with heavy rain",
210: "light thunderstorm",
211: "thunderstorm",
212: "heavy thunderstorm",
221: "ragged thunderstorm",
230: "thunderstorm with light drizzle",
231: "thunderstorm with drizzle",
232: "thunderstorm with heavy drizzle", 
300: "light intensity drizzle",
301: "drizzle",
302: "heavy intensity drizzle",
310: "light intensity drizzle rain",
311: "drizzle rain",
312: "heavy intensity drizzle rain",
313: "shower rain and drizzle",
314: "heavy shower rain and drizzle",
321: "shower drizzle",
500: "light rain",
501: "moderate rain",
502: "heavy intensity rain",
503: "very heavy rain",
504: "extreme rain",
511: "freezing rain",
520: "light intensity shower rain",
521: "shower rain",
522: "heavy intensity shower rain",
531: "ragged shower rain",
600: "light snow",
601: "snow",
602: "heavy snow",
611: "sleet",
612: "shower sleet",
615: "light rain and snow",
616: "rain and snow",
620: "light shower snow",
621: "shower snow",
622: "heavy shower snow",
701: "mist",
711: "smoke",
721: "haze",
731: "sand, dust whirls",
741: "fog",
751: "sand",
761: "dust",
762: "volcanic ash",
771: "squalls",
781: "tornado",
800: "clear sky",
801: "few clouds",
802: "scattered clouds",
803: "broken clouds",
804: "overcast clouds",
900: "tornado",
901: "tropical storm",
902: "hurricane",
903: "cold",
904: "hot",
905: "windy",
906: "hail",
951: "calm",
952: "light breeze",
953: "gentle breeze",
954: "moderate breeze",
955: "fresh breeze",
956: "strong breeze",
957: "high wind, near gale",
958: "gale",
959: "severe gale",
960: "storm",
961: "violent storm",
962: "hurricane"}

def parse_unix_time(tm):
    return time.strftime('%Y-%m-%d %H:%M', time.localtime(float(tm)))

def get_condition(code):
    try:
        return conditions[int(code)]
    except KeyError, e:
        return code


def get_icon(icon):
    return "http://openweathermap.org/img/w/" + icon + ".png"

Weather = collections.namedtuple("Weather", [   "clouds", 
                                                "name", 
                                                "visibility", 
                                                "country", 
                                                "sunset", 
                                                "sunrise", 
                                                "main", 
                                                "description", 
                                                "id", 
                                                "icon", 
                                                "latitude", 
                                                "longtitude",
                                                "time", 
                                                "pressure", 
                                                "temperature", 
                                                "humidity", 
                                                "speed", 
                                                "degree",
                                                "rain",
                                                "snow"])

def get_current_weather(open_weather_maps_api_key, loc):
    url = "http://api.openweathermap.org/data/2.5/weather?lat={0}&lon={1}&units=metric&APPID={2}".format(loc.latitude, loc.longtitude, open_weather_maps_api_key)
    response = requests.get(url).json()     
    if response["cod"] == 200:      
        return Weather( clouds = float(response["clouds"]["all"]),
                        name = response["name"],
                        visibility = float(response["visibility"]) if "visibility" in response else 0.0,
                        country = response["sys"]["country"],
                        sunset = parse_unix_time(response["sys"]["sunset"]),
                        sunrise = parse_unix_time(response["sys"]["sunrise"]),
                        main = response["weather"][0]["main"],
                        description = response["weather"][0]["description"],
                        id = get_condition(response["weather"][0]["id"]),
                        icon = get_icon(response["weather"][0]["icon"]),
                        latitude = float(response["coord"]["lat"]),
                        longtitude = float(response["coord"]["lon"]),
                        time = parse_unix_time(response["dt"]),
                        pressure = float(response["main"]["pressure"]),
                        temperature = float(response["main"]["temp"]),
                        humidity = float(response["main"]["humidity"]),
                        speed = float(response["wind"]["speed"]),
                        degree = float(response["wind"]["deg"]),
                        rain = float(response["rain"]["rain.3h"]) if "rain" in response else 0.0,
                        snow = float(response["snow"]["snow.3h"]) if "snow" in response else 0.0)
    else:
        print response
        return None

if __name__ == "__main__":
    with open('configuration.json') as conf_file:
        configuration = json.load(conf_file)

    loc = location.get_location(google_api_key, address)
    print "weather at %s: " % str(loc)
    weather = get_current_weather(configuration["open_weather_maps_api_key"], loc)
    print weather